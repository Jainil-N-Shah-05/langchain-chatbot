import pandas as pd
from plotly.subplots import make_subplots
import plotly.graph_objects as go
from plotly.colors import qualitative

# 1) Load DCM data
# df_dcm = pd.read_excel('Your_DCM_Data.xlsx', sheet_name=None)  # If from multiple sheets
df_dcm = pd.read_csv('DCM_MasterData.csv')  # If already merged

# 2) Clean columns
df_dcm['Year'] = df_dcm['Year'].astype(int)
df_dcm['Rank'] = df_dcm['Rank'].astype(int)
df_dcm['Net Revenue USD (m)'] = pd.to_numeric(df_dcm['Net Revenue USD (m)'], errors='coerce')

# 3) Loop through industries
industries = df_dcm['Industry'].unique()

for industry in industries:
    df_ind = df_dcm[df_dcm['Industry'] == industry]

    # 4) Get top-3 by rank per year
    top3 = (
        df_ind
        .sort_values(['Year', 'Rank'])
        .groupby('Year', as_index=False)
        .head(3)
        .dropna(subset=['Net Revenue USD (m)'])
    )

    years = sorted(top3['Year'].unique())
    n_years = len(years)

    # 5) Color map for banks
    all_banks = sorted(top3['Bank'].unique())
    palette   = qualitative.Plotly
    color_map = {b: palette[i % len(palette)] for i, b in enumerate(all_banks)}

    # 6) Create subplots (1 row x n_years columns), shared Y-axis
    fig = make_subplots(
        rows=1, cols=n_years,
        shared_yaxes=True,
        subplot_titles=[str(y) for y in years]
    )

    # 7) Add one trace per bank-in-year
    seen = set()
    for col, year in enumerate(years, start=1):
        dfy = top3[top3['Year'] == year]
        for _, row in dfy.iterrows():
            bank = row['Bank']
            rev  = row['Net Revenue USD (m)']
            fig.add_trace(
                go.Bar(
                    x=[bank],
                    y=[rev],
                    name=bank,
                    marker_color=color_map[bank],
                    showlegend=(bank not in seen),
                    text=[f"${rev:,.0f}"],  # nicely formatted
                    textposition='outside'
                ),
                row=1, col=col
            )
            seen.add(bank)

    # 8) Layout tidy-up
    fig.update_layout(
        title_text=f"Top 3 Banks in {industry} - DCM Revenue (2020â€“2025)",
        title_x=0.5,
        height=500,
        margin=dict(t=80, b=40, l=60, r=20),
        bargap=0.2,  # controlled gap
        template="plotly_white"
    )
    fig.update_yaxes(title_text="Net Revenue (Million USD)", row=1, col=1)
    for c in range(1, n_years+1):
        fig.update_xaxes(title_text="", row=1, col=c)

    fig.show()
